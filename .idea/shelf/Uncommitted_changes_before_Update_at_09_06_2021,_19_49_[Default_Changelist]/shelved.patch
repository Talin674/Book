Index: kniga.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nimport random\n\nclass Bag(object):\n    def __init__(self, max_items=7):\n        self.tbag = []\n        self.max_items = max_items\n    def add(self, item):\n        if len(self.tbag) > self.max_items:\n            self.tbag.append(item)\n        else:\n            print('Больше нет места!')\n    def delete(self, index_item):\n        del self.tbag[index_item]\n    def show(self):\n        ret = \"\"\n        index_item = 0\n        for i in self.tbag:\n            ret = ret + str(index_item) + \"\\t\" + i\n            index_item += 1\n        return ret\n\nclass Player(object):\n    def __init__(self, skill=random.randint(1, 6) + 6, stamina=random.randint(1, 12) + 12,\n                 luck=random.randint(1, 6) + 6, money=15):\n        self.skill = skill\n        self.stamina = stamina\n        self.luck = luck\n        self.money = money\n        self.bag = Bag\n    def __str__(self):\n        statistic = {\"Мастерство=\":self.skill, \"Выносливость=\":self.stamina, \"Удача=\":self.luck, \"Деньги=\":self.money, \"Инвентарь=\":self.bag().tbag}\n        return statistic.items()\nclass Fight(Player):\n    def fight_enemy(self):\n        for i in enemys:\n            print(\"НОВЫЙ ВРАГ\")\n            statistic = []\n            m = 0\n            for b in i:\n                m += 1\n                if m != 1:\n                    statistic.append(b)\n            dd = int(i[2])\n            while dd > 0:\n                l = len(enemys)\n                if l > 1:\n                    x = 0\n                    for a in enemys:\n                        self.enemy = cube() + int(a[1])\n                        print(\"------БОЙ НАЧАЛСЯ------\")\n                        print(\"\\t(\" + a[0] + \")\")\n                        print(\"На кубиках выпало: \", self.enemy - int(a[1]))\n                        print(\"Его сила удара: \", self.enemy)\n                        self.player = cube() + self.skill\n                        print(\"\\t\\tВЫ\")\n                        print(\"На кубиках выпало: \", self.player - self.skill)\n                        print(\"Ваша сила удара: \", self.player)\n                        if self.enemy > self.player:\n                            self.stamina -= 2\n                            print(\"Ваша удар оказался слабее! Вы потеряли 2 выносливости, у вас осталось\", self.stamina)\n                        if self.player > self.enemy:\n                            print(\"Вы сильнее вашего врага!\")\n                        if x == 0 and self.player > self.enemy:\n                            dd -= 2\n                            statistic.insert(1, dd)\n                            del statistic[2]\n                            print(\"DD\", dd)\n                            print(i[0], \"потерял 2 выносливости, теперь у него\", statistic[1])\n                        elif self.stamina <= 0:\n                            self.stamina = 0\n                            print(\"Вы проиграли, у вас закончилась выносливость\")\n                            return False\n                        if self.player == self.enemy:\n                            print(\"Ваши силы равны!\")\n                        x += 1\n                self.enemy = cube() + int(i[1])\n                print(\"------БОЙ НАЧАЛСЯ------\")\n                print(\"\\t(\" + i[0] + \")\")\n                print(\"На кубиках выпало: \", self.enemy - int(i[1]))\n                print(\"Его сила удара: \", self.enemy)\n                self.player = cube() + self.skill\n                print(\"\\t\\tВЫ\")\n                print(\"На кубиках выпало: \", self.player - self.skill)\n                print(\"Ваша сила удара: \", self.player)\n                if self.player > self.enemy:\n                    dd -= 2\n                    statistic.insert(1, dd)\n                    del statistic[2]\n                    print(\"DD\", dd)\n                    print(i[0], \"потерял 2 выносливости, теперь у него\", statistic[1])\n                elif self.player < self.enemy:\n                    self.stamina -= 2\n                    print(\"Ваша удар оказался слабее! Вы потеряли 2 выносливости, у вас осталось\", self.stamina)\n                elif self.stamina <= 0:\n                    self.stamina = 0\n                    return False\n                if self.player == self.enemy:\n                    print(\"Ваши силы равны!\")\n            del enemys[0]\n        print(\"Ура! Все враги поверженны, вы одержали победу!\")\n        return True\n# f = os.path.join(\"D:\\Python/Book\", \"Braslavskiy_Podzemelya-Chernogo-zamka_lU7lVg_178246.txt\")\nf = \"Braslavskiy_Podzemelya-Chernogo-zamka_lU7lVg_178246.txt\"\n\nq = open(f, 'r', encoding='utf-8')\nfor s in range(70):\n    print(q.readline())\nq.close()\nscore = 2\nslovo1 = \"—\", \"(\", \"то\", \"на\"\nspisok = \"уменьшить на \", \"надо на \", \"уменьшите на \", \"увеличив на \", \"уменьшив на \", \"увеличьте на \"\n\ndef cube():\n    dice = random.randint(1, 12) #не верно. кубик у нас 6 гранный и иногда надо кидать все таки 1 кубик, а не два\n    return dice\n\ndef poisk(number):\n    q = open(f, 'r', encoding='utf-8')\n    #    povtor.append(number)\n    number2 = number + 1\n    #    print(povtor)\n    ret = \"\"\n    while True:\n        i = (q.readline())\n        if i[:-1] == str(number):\n            while True:\n                r = q.readline()\n                if r[:-1] == str(number2):\n                    break\n                # print(r)\n                # print (\"----\")\n                ret = ret + r\n            return ret\n\ndef findNum(r, s, position):\n    x = 2\n    position = r.find(s, position + 1)\n    if position == -1:\n        # print (\"Не обнаружен переход!\")\n        return None\n    # print (position)\n    if s == \"(\":\n        x = 1\n    position += x\n    if r[position] == \" \":\n        position += 1\n    spt = \"\"\n    while True:\n        if r[position].isdigit():\n            spt += r[position]\n        else:\n            break\n        position += 1\n    return spt\n\ndef enemy_append(name_enemy, lines2):\n    enemys = []\n    name_enemy2 = len(name_enemy)\n    parametr = 1\n    parametr2 = 3\n    n = 0\n    for i in range(name_enemy2):\n        enemys.append((name_enemy[n], lines2[parametr], lines2[parametr2]))\n        n += 1\n        parametr += 4\n        parametr2 += 4\n    return enemys\n\ndef fight_poisk(r):\n    global enemys\n    lines = []\n    lines2 = []\n    name_enemy = []\n    lines += r.split(\"\\n\")\n    l = len(lines)\n    a = 0\n    enemys = None\n    for i in range(l):\n        c = lines[a]\n        if c.startswith(\"Мастерство\"):\n            c = lines[a + 1]\n            if c.startswith(\"Выносливость\"):\n                m = lines[a]\n                z = lines[a + 1]\n                lines2 += m.split()\n                lines2 += z.split()\n                name_enemy.append(lines[a - 1])\n                enemys = enemy_append(name_enemy, lines2)\n        a += 1\n    return enemys\ndef next_steps(r):\n    steps = []\n    l = len(r)\n    position = -1\n    while l > position:\n        for i in slovo1:\n            spt = findNum(r, i, position)\n            position += 1\n            if spt != None and spt not in steps and spt != \"\" and spt != \"1\" and spt != \"2\":\n                steps.append(spt)\n            spt = findNum(r, \"(\", position)\n            position += 1\n            if spt != None and spt not in steps and spt != \"\" and spt != \"1\":\n                steps.append(spt)\n    return steps\n\na = Player()\nb = Bag()\nc = Fight()\ntextGL = poisk(1)\nsteps = next_steps(textGL)\nprint(textGL)\nprint(steps)\nwhile True:\n    print('Чтобы открыть инвентарь - напишите \"инвентарь\". Если хотите выпить из фляги - напишите \"фляга\"')\n    print('Чтобы посмотреть статистику вашего персонажа введите - \"статистика\"')\n    num = input('Введите число из представленных в главе: ')\n    if num == \"фляга\":\n        if score > 0:\n            score -= 1\n            print('Вы использовали флягу (выносливость +2). У вас осталось', score, 'использованеи(ий)')\n            a.stamina += 2\n        else:\n            print('У вас закончилось попытки')\n    elif num == \"статистика\":\n        print(a.__str__())\n    elif num.isdigit():\n        number = int(num)\n        textGL = poisk(number)\n        steps = next_steps(textGL)\n        enemys = fight_poisk(textGL)\n        print(textGL)\n        if enemys != None:\n            print(\"Начался бой!\")\n            print(c.fight_enemy())\n            if c.fight_enemy() == True:\n                print(\"Ваши характеристики\", a.__str__())\n            else:\n                print(\"Вы проиграли!\")\n                break\n        if steps == []:\n            print(\"Игра закончена\")\n            break\n        print(steps)\n    else:\n        print('Такого числа нет')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kniga.py b/kniga.py
--- a/kniga.py	(revision 15487ec70558cab22fa82c3512996ae7f92ade95)
+++ b/kniga.py	(date 1621868842278)
@@ -112,7 +112,7 @@
 spisok = "уменьшить на ", "надо на ", "уменьшите на ", "увеличив на ", "уменьшив на ", "увеличьте на "
 
 def cube():
-    dice = random.randint(1, 12) #не верно. кубик у нас 6 гранный и иногда надо кидать все таки 1 кубик, а не два
+    dice = random.randint(1, 12) #не верно. кубик у нас 6 гранный и иногда надо кидать все таки 1 кубик, а не два86
     return dice
 
 def poisk(number):
